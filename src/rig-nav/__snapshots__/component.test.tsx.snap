// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RigNavComponent /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RigNavComponent
    configHandler={[Function]}
    error=""
    liveConfigHandler={[Function]}
    openConfigurationsHandler={[Function]}
    selectedView="Extension Views"
    viewerHandler={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="personal-bar"
>
          <div
                    className="top-nav-item__login"
          >
                    <LoginButton />
          </div>
</div>,
        <div
          className="top-nab__item-container"
>
          <a
                    className="top-nav-item top-nav-item__selected offset"
                    onClick={[Function]}
          >
                    Extension Views
          </a>
          <a
                    className="top-nav-item"
                    onClick={[Function]}
          >
                    Broadcaster Config
          </a>
          <a
                    className="top-nav-item"
                    onClick={[Function]}
          >
                    Live Config
          </a>
          <a
                    className="top-nav-item"
                    onClick={[Function]}
          >
                    Configurations
          </a>
</div>,
      ],
      "className": "top-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            <div
              className="top-nav-item__login"
>
              <LoginButton />
</div>,
          ],
          "className": "personal-bar",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <LoginButton />,
              "className": "top-nav-item__login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="top-nav-item top-nav-item__selected offset"
              onClick={[Function]}
>
              Extension Views
</a>,
            <a
              className="top-nav-item"
              onClick={[Function]}
>
              Broadcaster Config
</a>,
            <a
              className="top-nav-item"
              onClick={[Function]}
>
              Live Config
</a>,
            <a
              className="top-nav-item"
              onClick={[Function]}
>
              Configurations
</a>,
            undefined,
          ],
          "className": "top-nab__item-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Extension Views",
              "className": "top-nav-item top-nav-item__selected offset",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Extension Views",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster Config",
              "className": "top-nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Broadcaster Config",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Live Config",
              "className": "top-nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Live Config",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Configurations",
              "className": "top-nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Configurations",
            "type": "a",
          },
          undefined,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="personal-bar"
>
            <div
                        className="top-nav-item__login"
            >
                        <LoginButton />
            </div>
</div>,
          <div
            className="top-nab__item-container"
>
            <a
                        className="top-nav-item top-nav-item__selected offset"
                        onClick={[Function]}
            >
                        Extension Views
            </a>
            <a
                        className="top-nav-item"
                        onClick={[Function]}
            >
                        Broadcaster Config
            </a>
            <a
                        className="top-nav-item"
                        onClick={[Function]}
            >
                        Live Config
            </a>
            <a
                        className="top-nav-item"
                        onClick={[Function]}
            >
                        Configurations
            </a>
</div>,
        ],
        "className": "top-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <div
                className="top-nav-item__login"
>
                <LoginButton />
</div>,
            ],
            "className": "personal-bar",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <LoginButton />,
                "className": "top-nav-item__login",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="top-nav-item top-nav-item__selected offset"
                onClick={[Function]}
>
                Extension Views
</a>,
              <a
                className="top-nav-item"
                onClick={[Function]}
>
                Broadcaster Config
</a>,
              <a
                className="top-nav-item"
                onClick={[Function]}
>
                Live Config
</a>,
              <a
                className="top-nav-item"
                onClick={[Function]}
>
                Configurations
</a>,
              undefined,
            ],
            "className": "top-nab__item-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Extension Views",
                "className": "top-nav-item top-nav-item__selected offset",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Extension Views",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster Config",
                "className": "top-nav-item",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Broadcaster Config",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Live Config",
                "className": "top-nav-item",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Live Config",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Configurations",
                "className": "top-nav-item",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Configurations",
              "type": "a",
            },
            undefined,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
